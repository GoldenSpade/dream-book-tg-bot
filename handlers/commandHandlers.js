import { getLunarDay } from '../helpers/lunarDay.js'
import { getGregorianDay } from '../helpers/gregorianDay.js'
import { shareKeyboard } from '../helpers/keyboards.js'
import { startFortuneKeyboard } from '../helpers/keyboards.js'
import {
  getRandomFortune,
  getMagicBallImage,
} from '../fortune_tellings/yes_no/yesNo.js'

export const commandHandlers = {
  'üîç –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É': (ctx) => ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞:'),

  '‚ÑπÔ∏è –û –±–æ—Ç–µ': (ctx) =>
    ctx.reply(
      'üîÆ –°–æ–Ω–Ω–∏–∫ —Å –≥–ª—É–±–æ–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –ø—Ä–∏—Å–Ω–∏–ª–æ—Å—å ‚Äî –∏ —è —Ä–∞—Å—à–∏—Ñ—Ä—É—é —Å–∫—Ä—ã—Ç—ã–µ —Å–º—ã—Å–ª—ã!'
    ),

  '‚ùì –ü–æ–º–æ—â—å': (ctx) =>
    ctx.reply(
      '–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏—è —Å–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π –±–æ–ª—å—à–µ 3-—Ö —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–µ" –≤–º–µ—Å—Ç–æ "—ë".'
    ),

  'üåô –õ—É–Ω–Ω—ã–µ —Å–Ω—ã': async (ctx) => {
    try {
      const moonInfo = getLunarDay()
      const shareText = `${moonInfo}\n‚ú® –ë–æ–ª—å—à–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: https://t.me/${ctx.botInfo.username}`

      await ctx.reply(moonInfo)
      await ctx.reply(
        `üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º:`,
        shareKeyboard(shareText, 'üåô –õ—É–Ω–Ω—ã–π –¥–µ–Ω—å')
      )
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error)
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.')
    }
  },

  'üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ —Å–Ω—ã': async (ctx) => {
    try {
      const gregorianInfo = getGregorianDay()
      const shareText = `${gregorianInfo}\n‚ú® –ë–æ–ª—å—à–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: https://t.me/${ctx.botInfo.username}`

      await ctx.reply(gregorianInfo)
      await ctx.reply(
        `üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º:`,
        shareKeyboard(shareText, 'üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π —Å–æ–Ω')
      )
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error)
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.')
    }
  },

  'üîÆ –ì–∞–¥–∞–Ω–∏–µ –î–∞/–ù–µ—Ç': async (ctx) => {
    try {
      const magicBallImage = await getMagicBallImage()

      await ctx.replyWithPhoto(
        { source: magicBallImage },
        {
          caption: 'üîÆ –ó–∞–¥—É–º–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"',
          reply_markup: startFortuneKeyboard.reply_markup,
        }
      )
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–∞–¥–∞–Ω–∏—è:', error)
      ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.')
    }
  },
}
