import readline from 'readline'
import { db } from '../../data/db.js'

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
})

function ask(question) {
  return new Promise((resolve) => rl.question(question, resolve))
}

async function main() {
  console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n')

  const userId = await ask('–í–≤–µ–¥–∏—Ç–µ userId: ')
  if (!userId) return console.log('‚ùå userId –Ω–µ —É–∫–∞–∑–∞–Ω')

  const user = db.prepare('SELECT * FROM Users WHERE userId = ?').get(userId)

  if (!user) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
    rl.close()
    return
  }

  console.log('\nüë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:')
  console.table({
    userId: user.userId,
    limit: user.limit,
    premiumSince: user.premiumSince,
  })

  const field = await ask('\n–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å? (limit/premium): ')

  if (field === 'limit') {
    const newLimit = await ask('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞: ')
    db.prepare('UPDATE Users SET "limit" = ? WHERE userId = ?').run(
      Number(newLimit),
      userId
    )
    console.log('‚úÖ –õ–∏–º–∏—Ç –æ–±–Ω–æ–≤–ª—ë–Ω.')
  } else if (field === 'premium') {
    const newDate = await ask(
      '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–µ–º–∏—É–º–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î): '
    )
    const time = await ask('–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (—á—á:–º–º:—Å—Å), –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 00:00:00: ')
    const dateTime = new Date(`${newDate}T${time || '00:00:00'}`).toISOString()

    db.prepare('UPDATE Users SET premiumSince = ? WHERE userId = ?').run(
      dateTime,
      userId
    )
    console.log(`‚úÖ –î–∞—Ç–∞ –ø—Ä–µ–º–∏—É–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${dateTime}`)
  } else {
    console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø–æ–ª–µ. –í–≤–µ–¥–∏—Ç–µ "limit" –∏–ª–∏ "premium".')
  }

  rl.close()
}

main()
