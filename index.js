import { Telegraf, Markup } from 'telegraf'
import 'dotenv/config'
import { User, Activity, initDB } from './data/db.js'
import { safeReply } from './handlers/limiter.js'
import { dataDreams } from './data/dataDreams.js'
import { commandHandlers } from './handlers/commandHandlers.js'
import {
  mainMenu,
  dreamBookMenu,
  fortuneMenu,
  backKeyboard,
} from './helpers/keyboards.js'

import { dateFromTimeStamp } from './helpers/dateFromTimeStamp.js'
import { searchItems } from './helpers/searchItems.js'
import { splitText } from './helpers/splitText.js'
import { getRandomFortune } from './fortune_tellings/yes_no/yesNo.js'
import {
  getRandomMorpheusAudio,
  getMorpheusImage,
} from './fortune_tellings/morpheus_says/morpheusSays.js'
import { getTimeFortune } from './fortune_tellings/time_reading/timeReading.js'
import { getCompassFateVideo } from './fortune_tellings/compass_of_fate/compassOfFate.js'
import { getRandomCosmicFortune } from './fortune_tellings/voice_of_universe/voiceOfOniverse.js'

const bot = new Telegraf(process.env.BOT_API_KEY)
const CACHE_TTL = 60 * 60 * 1000
const searchResults = new Map()
const sentMessages = new Map()

// üßπ –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(() => {
  const now = Date.now()
  for (const [key, value] of searchResults.entries()) {
    if (now - value.timestamp > CACHE_TTL) {
      searchResults.delete(key)
    }
  }
}, 5 * 60 * 1000)

bot.use(async (ctx, next) => {
  if (!ctx.from) return next()
  const [user] = await User.findOrCreate({ userId: ctx.from.id })
  ctx.state.referrerId = user?.referrerId || null
  await next()
})

bot.use(async (ctx, next) => {
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  if (ctx.from) {
    await User.update(ctx.from.id, {
      lastActivity: new Date().toISOString(),
    })
  }
  await next()
})

await initDB()

bot.command('time', async (ctx) => {
  const fortune = getTimeFortune()
  await safeReply(ctx, () => ctx.reply(fortune))
})

// Start command –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
bot.start(async (ctx) => {
  try {
    const { id: userId, first_name, username, language_code } = ctx.from
    const chatId = ctx.chat?.id || null

    let cleanPayload = null
    let referrerId = null

    // 1. –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ—Ñ. ID –∏ –æ—á–∏—â–∞–µ–º buttonData
    if (ctx.startPayload) {
      const match = ctx.startPayload.match(/^(utm_[a-zA-Z0-9]+)_ref_(\d+)$/)

      if (match) {
        cleanPayload = match[1]
        const extractedId = parseInt(match[2])

        if (extractedId && extractedId !== ctx.from.id) {
          referrerId = extractedId
          ctx.state.referrerId = referrerId
        }
      }
    }

    // 2. –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –∑–∞–ø–∏—Å–∏ referrerId –≤ Users)
    const [user, created] = await User.findOrCreate({
      userId,
      firstName: first_name,
      userName: username || null,
      chatId,
      language: language_code || null,
    })
    //
    await User.update(userId, {
      firstName: first_name,
      userName: username || null,
      chatId,
      language: language_code || null,
      lastActivity: new Date().toISOString(),
    })

    // 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ ButtonActions
    if (cleanPayload) {
      Activity.logButtonAction(
        ctx.from.id,
        'utm_referral_start',
        cleanPayload,
        referrerId
      )
    }

    if (created) {
      console.log(
        `‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${first_name}, ID: ${userId}, Ref: ${referrerId}`
      )
    } else {
      console.log(`üëã –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${first_name}, ID: ${userId}`)
    }
    await safeReply(ctx, () =>
      ctx.replyWithHTML(
        `üåô <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ—Ä—Ñ–µ–π ‚Äî –±–æ—Ç–∞ —Å–Ω–æ–≤–∏–¥–µ–Ω–∏–π –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π!</b>\n\n` +
          `üìñ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n` +
          `‚Ä¢ –ù–∞–π—Ç–∏ <b>—Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Å–Ω–æ–≤</b> –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n` +
          `‚Ä¢ –£–∑–Ω–∞—Ç—å <b>–ª—É–Ω–Ω–æ–µ</b> –∏ <b>–∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–Ω–∞\n\n` +
          `üîÆ –ê –µ—â—ë –≤–∞—Å –∂–¥—É—Ç:\n` +
          `‚Ä¢ –ì–∞–¥–∞–Ω–∏—è <b>–î–∞/–ù–µ—Ç</b>, <b>–ø–æ –≤—Ä–µ–º–µ–Ω–∏</b>, <b>–ø–æ –∫–æ–º–ø–∞—Å—É</b>\n` +
          `‚Ä¢ <b>–ì–æ–ª–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π</b> –∏ <b>–º—É–¥—Ä–æ—Å—Ç—å –ú–æ—Ä—Ñ–µ—è</b>\n` +
          `‚Ä¢ –ê —Ç–∞–∫–∂–µ —Ä–µ–¥–∫–∏–µ <b>–≤–æ—Å—Ç–æ—á–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è</b> —Å –¥—Ä–µ–≤–Ω–∏–º–∏ –æ–±—Ä–∞–∑–∞–º–∏ –∏ —Å–º—ã—Å–ª–∞–º–∏\n\n` +
          `üìò –í –∫–∞–∂–¥–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ <b>—É–¥–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</b> ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n` +
          `‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∏–∑ —Å–Ω–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.`,
        mainMenu
      )
    )
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start:', err)
    await safeReply(ctx, () =>
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    )
  }
})

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –∏—Å—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
bot.use(async (ctx, next) => {
  await next()
  if (ctx.message && ctx.botInfo && ctx.from.id === ctx.botInfo.id) {
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    sentMessages.get(ctx.chat.id).push(ctx.message.message_id)
  }
})

// --- –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É ---
bot.action('trigger_search_prompt', async (ctx) => {
  ctx.session.awaitingSearch = true
  await commandHandlers.search_prompt(ctx)
})

bot.on('text', async (ctx) => {
  const { text: target, from, message_id } = ctx.message

  console.log(
    `first_name: ${from.first_name}, userName: ${
      from.username
    }, word: ${target}, date: ${dateFromTimeStamp(ctx.message.date)}`
  )

  if (typeof commandHandlers[target] === 'function') return

  if (target.length < 3) {
    await safeReply(ctx, () =>
      ctx.reply('üîç –°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.', mainMenu)
    )
    return
  }

  try {
    const dreams = searchItems(dataDreams, target)

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    Activity.logSearchQuery(ctx.from.id, target)

    if (!dreams.length) {
      await safeReply(ctx, () =>
        ctx.reply('üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.', mainMenu)
      )
      return
    }

    const buttons = dreams.map((dream, index) =>
      Markup.button.callback(dream.word, `dream_${message_id}_${index}`)
    )

    searchResults.set(message_id, {
      dreams,
      timestamp: Date.now(),
      userId: ctx.from.id,
    })

    const searchResultMessage = await safeReply(ctx, () =>
      ctx.reply(
        `üîç –ù–∞–π–¥–µ–Ω–æ: ${dreams.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤`,
        Markup.inlineKeyboard(
          [
            ...buttons,
            Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu'),
          ],
          { columns: 2 }
        )
      )
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    sentMessages.get(ctx.chat.id).push(searchResultMessage.message_id)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error)
  }
})

bot.action(/^dream_(\d+)_(\d+)$/, async (ctx) => {
  const [_, messageId, index] = ctx.match
  const cached = searchResults.get(Number(messageId))

  if (!cached || Date.now() - cached.timestamp > CACHE_TTL) {
    await ctx.answerCbQuery('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç–∞—Ä–µ–ª–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∏—Å–∫.')
    return
  }

  const dream = cached.dreams[Number(index)]
  if (!dream) return

  const interpretationText = `${dream.description}` // –¢—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ —Å–Ω–∞
  const parts = splitText(interpretationText, 4096) // –†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ (–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–Ω–∞ –∏ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ "–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Å–Ω–∞")
  const shareText = `${dream.description.substring(
    0,
    100
  )}...\n\n‚ú® –ë–æ–ª—å—à–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –≤ –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ú–æ—Ä—Ñ–µ–π: https://t.me/MorfejBot?start=utm_dream_ref_${
    ctx.from.id
  }`

  // –ï—Å–ª–∏ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (parts.length === 1) {
    const sentMessage = await safeReply(ctx, () =>
      ctx.replyWithHTML(
        `${interpretationText}`, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–Ω–∞
        Markup.inlineKeyboard([
          [
            Markup.button.url(
              'ü¶â –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–Ω–æ–º —Å –¥—Ä—É–∑—å—è–º–∏',
              `https://t.me/share/url?url=${encodeURIComponent(
                ''
              )} &text=${encodeURIComponent(shareText)}`
            ),
          ],
          [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
        ])
      )
    )
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    sentMessages.get(ctx.chat.id).push(sentMessage.message_id)
  } else {
    // –ï—Å–ª–∏ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ –∏ –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–∏
    for (const part of parts) {
      const sentMessage = await safeReply(ctx, () =>
        ctx.replyWithHTML(
          `${part}`, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–Ω–∞
          Markup.inlineKeyboard([
            [
              Markup.button.url(
                'ü¶â –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–Ω–æ–º —Å –¥—Ä—É–∑—å—è–º–∏',
                `https://t.me/share/url?url=${encodeURIComponent(
                  ''
                )} &text=${encodeURIComponent(shareText)}`
              ),
            ],
            [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
          ])
        )
      )
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (!sentMessages.has(ctx.chat.id)) {
        sentMessages.set(ctx.chat.id, [])
      }
      sentMessages.get(ctx.chat.id).push(sentMessage.message_id)
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –∑–∞–ø–∏—Å—å –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Å–Ω–µ
  Activity.logButtonAction(
    ctx.from.id,
    'share_action',
    `üò¥ –°–æ–Ω: ${dream.word}`,
    ctx.state.referrerId
  )

  ctx.answerCbQuery()
})

// –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É –º–µ–Ω—é
// --- –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
bot.action('back_to_menu', async (ctx) => {
  try {
    await ctx.deleteMessage()
    await safeReply(ctx, () =>
      ctx.replyWithHTML('‚ú® <b>‡º∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‡º∫</b> ‚ú®', mainMenu)
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞:', error)
    await safeReply(ctx, () =>
      ctx.replyWithHTML('‚ú® <b>‡º∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‡º∫</b> ‚ú®', mainMenu)
    )
  }
})
// –í–æ–∑–≤—Ä–∞—Ç –≤ –°–æ–Ω–Ω–∏–∫
bot.action('back_to_dreams', async (ctx) => {
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_menu(ctx)
})
// –í–æ–∑–≤—Ä–∞—Ç –≤ –ì–∞–¥–∞–Ω–∏—è
bot.action('back_to_fortune', async (ctx) => {
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_menu(ctx)
})

// ‚è¨ –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
bot.action('menu_dreambook', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_menu(ctx)
})

bot.action('menu_fortune', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_menu(ctx)
})

bot.action('menu_instruction', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.general_instruction(ctx)
})

// ‚è¨ –ú–µ–Ω—é –°–æ–Ω–Ω–∏–∫–∞
bot.action('dream_search', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_search(ctx)
})

bot.action('dream_lunar', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_lunar(ctx)
})

bot.action('dream_calendar', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_calendar(ctx)
})

bot.action('dream_instruction', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.dream_instruction(ctx)
})

// ‚è¨ –ú–µ–Ω—é –ì–∞–¥–∞–Ω–∏–π
bot.action('fortune_yesno', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_yesno(ctx)
})

bot.action('fortune_morpheus', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_morpheus(ctx)
})

bot.action('fortune_time', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_time(ctx)
})

bot.action('fortune_compass', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_compass(ctx)
})

bot.action('fortune_voice', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_voice(ctx)
})

bot.action('fortune_instruction', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.deleteMessage().catch(() => {})
  await commandHandlers.fortune_instruction(ctx)
})

// –ö–æ–Ω–µ—Ü –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–µ–Ω—é

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –≥–∞–¥–∞–Ω–∏—è
bot.action('start_fortune', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    '‚ú® –ì–∞–¥–∞–Ω–∏–µ –î–∞/–ù–µ—Ç (–∑–∞–ø—É—Å–∫)',
    ctx.state.referrerId
  )
  try {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await ctx.deleteMessage()

    // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ
    const gifBuffer = await getRandomFortune()
    const shareText = `üïØÔ∏è –Ø –ø–æ–≥–∞–¥–∞–ª(–∞) –≤ –±–æ—Ç–µ \"–ú–æ—Ä—Ñ–µ–π\"!\n\n‚ú® –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã: https://t.me/MorfejBot?start=utm_yesno_ref_${ctx.from.id}`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–∞–¥–∞–Ω–∏—è
    await safeReply(ctx, () =>
      ctx.replyWithVideo(
        { source: gifBuffer },
        {
          caption: 'üîÆ –í–∞—à –æ—Ç–≤–µ—Ç... üé¨ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≤–∏–¥–µ–æ',
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.url(
                  '‚ú® –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–∞–¥–∞–Ω–∏–µ–º –î–∞/–ù–µ—Ç',
                  `https://t.me/share/url?url=${encodeURIComponent(
                    ' '
                  )}&text=${encodeURIComponent(shareText)}`
                ),
              ],
              [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–∞–¥–∞–Ω–∏–∏:', error)
    await safeReply(ctx, () =>
      ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.', mainMenu)
    )
  }
})

// –ì–∞–¥–∞–Ω–∏–µ –ú–æ—Ä—Ñ–µ–µ–π –≥–æ–≤–æ—Ä–∏—Ç
bot.action('start_morpheus', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    'üéß –ú–æ—Ä—Ñ–µ–π –≥–æ–≤–æ—Ä–∏—Ç (–ó–∞–ø—É—Å–∫)',
    ctx.state.referrerId
  )
  try {
    await ctx.deleteMessage()

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∞—É–¥–∏–æ –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏)
    const { path: imagePath, filename: imageFilename } =
      await getMorpheusImage()

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    await safeReply(ctx, () =>
      ctx.replyWithPhoto(
        { source: imagePath, filename: imageFilename },
        {
          caption: 'üïØ –ú–æ—Ä—Ñ–µ–π –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –≤–∞—Å –ø–æ—Å–ª–∞–Ω–∏–µ...',
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.callback(
                  'üéß –°–ª—É—à–∞—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ',
                  'play_morpheus_audio'
                ),
              ],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –ú–æ—Ä—Ñ–µ–π –≥–æ–≤–æ—Ä–∏—Ç:', error)
    await safeReply(ctx, () =>
      ctx.reply(
        '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ú–æ—Ä—Ñ–µ—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        mainMenu
      )
    )
  }
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–ª—É—à–∞—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ"
bot.action('play_morpheus_audio', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    'üéß –ú–æ—Ä—Ñ–µ–π –≥–æ–≤–æ—Ä–∏—Ç (–ó–∞–ø—É—Å–∫ –∞—É–¥–∏–æ)',
    ctx.state.referrerId
  )
  try {
    await ctx.deleteMessage() // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π

    // –ü–æ–ª—É—á–∞–µ–º –°–õ–£–ß–ê–ô–ù–û–ï –∞—É–¥–∏–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
    const { path: audioPath, filename: audioFilename } =
      await getRandomMorpheusAudio()
    const shareText = `üéµ –Ø —É—Å–ª—ã—à–∞–ª(–∞) –≥–æ–ª–æ—Å –ú–æ—Ä—Ñ–µ—è –≤ –±–æ—Ç–µ \"–ú–æ—Ä—Ñ–µ–π\"!\n‚ú® –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã: https://t.me/MorfejBot?start=utm_morpheus_ref_${ctx.from.id}`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ
    await safeReply(ctx, () =>
      ctx.replyWithAudio(
        { source: audioPath, filename: audioFilename },
        {
          caption: 'üïØ –ú–æ—Ä—Ñ–µ–π –≥–æ–≤–æ—Ä–∏—Ç...',
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.url(
                  'üéµ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–∞–¥–∞–Ω–∏–µ–º –ú–æ—Ä—Ñ–µ–π –≥–æ–≤–æ—Ä–∏—Ç',
                  `https://t.me/share/url?url=${encodeURIComponent(
                    `‚ñ∂ –ì–æ–ª–æ—Å –ú–æ—Ä—Ñ–µ—è üîä\n`
                  )}&text=${encodeURIComponent(shareText)}`
                ),
              ],
              [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –∞—É–¥–∏–æ:', error)
    await safeReply(ctx, () =>
      ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ú–æ—Ä—Ñ–µ—è.', mainMenu)
    )
  }
})

// –ó–∞–ø—É—Å–∫ –ì–∞–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
bot.action('start_time_fortune', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    '‚è∞ –ì–∞–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ (–∑–∞–ø—É—Å–∫)',
    ctx.state.referrerId
  )
  try {
    await ctx.deleteMessage()
    const result = getTimeFortune()

    const shareText = `${result}\n‚ú® –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã: https://t.me/MorfejBot?start=utm_time_ref_${ctx.from.id}`

    await safeReply(ctx, () =>
      ctx.replyWithVideo(
        { source: './fortune_tellings/time_reading/video/time_reading.mp4' }, // –¥–æ–±–∞–≤—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        {
          caption: result,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.url(
                  '‚è∞ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–∞–¥–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏',
                  `https://t.me/share/url?url=${encodeURIComponent(
                    `‚öú –ì–∞–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ ‚öú\n`
                  )}&text=${encodeURIComponent(shareText)}`
                ),
              ],
              [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–∞–¥–∞–Ω–∏–∏:', error)
    await safeReply(ctx, () =>
      ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.', mainMenu)
    )
  }
})
// –ö–æ–º–ø–∞—Å —Å—É–¥—å–±—ã
bot.action('start_compass_fate', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    'üß≠ –ö–æ–º–ø–∞—Å —Å—É–¥—å–±—ã (–∑–∞–ø—É—Å–∫)',
    ctx.state.referrerId
  )
  try {
    await ctx.deleteMessage()
    const { path } = getCompassFateVideo()

    const shareText = `üß≠ –Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª(–∞) –ö–æ–º–ø–∞—Å –°—É–¥—å–±—ã –≤ –±–æ—Ç–µ \"–ú–æ—Ä—Ñ–µ–π\".\n‚ú® –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã: https://t.me/MorfejBot?start=utm_compass_ref_${ctx.from.id}`

    await safeReply(ctx, () =>
      ctx.replyWithVideo(
        { source: path },
        {
          caption: 'üïØ –°—É–¥—å–±–∞ –≤—ã–±—Ä–∞–ª–∞ –¥–ª—è —Ç–µ–±—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...',
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.url(
                  'üß≠ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ö–æ–º–ø–∞—Å–æ–º –°—É–¥—å–±—ã',
                  `https://t.me/share/url?url=${encodeURIComponent(
                    `‚ùá –ö–æ–º–ø–∞—Å —Å—É–¥—å–±—ã ‚ú¥\n`
                  )}&text=${encodeURIComponent(shareText)}`
                ),
              ],
              [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –ö–æ–º–ø–∞—Å —Å—É–¥—å–±—ã (–≤–∏–¥–µ–æ):', error)
    await safeReply(ctx, () =>
      ctx.reply(
        '‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤.',
        mainMenu
      )
    )
  }
})

bot.action('start_voice_of_universe', async (ctx) => {
  Activity.logButtonAction(
    ctx.from.id,
    'fortune_action',
    'ü™ê –ì–æ–ª–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π (–∑–∞–ø—É—Å–∫)',
    ctx.state.referrerId
  )

  try {
    await ctx.deleteMessage()
    const { path, message, name } = getRandomCosmicFortune()
    const interpretationText = `–í—Å–µ–ª–µ–Ω–Ω–∞—è –¥–∞–ª–∞ –∑–Ω–∞–∫ "${name}":\n\n‚ú®${message}`
    const shareText = `ü™ê –Ø —É—Å–ª—ã—à–∞–ª(–∞) –≥–æ–ª–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π –≤ –±–æ—Ç–µ "–ú–æ—Ä—Ñ–µ–π"!\n‚ú® –ü–æ–ø—Ä–æ–±—É–π –∏ —Ç—ã: https://t.me/MorfejBot?start=utm_voice_ref_${ctx.from.id}`

    await safeReply(ctx, () =>
      ctx.replyWithVideo(
        { source: path },
        {
          caption: `ü¶ãüåÄ ${interpretationText}`,
          reply_markup: {
            inline_keyboard: [
              [
                Markup.button.url(
                  'ü™ê –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–º –í—Å–µ–ª–µ–Ω–Ω–æ–π',
                  `https://t.me/share/url?url=${encodeURIComponent(
                    `üí´ –ì–æ–ª–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π\n`
                  )}&text=${encodeURIComponent(shareText)}`
                ),
              ],
              [Markup.button.callback('‚è™ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
            ],
          },
        }
      )
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–∞–¥–∞–Ω–∏–∏ –ì–æ–ª–æ—Å –í—Å–µ–ª–µ–Ω–Ω–æ–π:', error)
    await safeReply(ctx, () =>
      ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', mainMenu)
    )
  }
})

// --- –ó–∞–ø—É—Å–∫ ---
bot
  .launch()
  .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
  .catch((err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err))

process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))
