// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
import { Telegraf, Markup } from 'telegraf' // –û—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
import 'dotenv/config' // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
import { data } from './data/data.js' // –î–∞–Ω–Ω—ã–µ —Å–æ–Ω–Ω–∏–∫–∞ (–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è–º–∏)
import { splitText } from './helpers/splitText.js' // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∏–≤–∫–∏ –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
import { searchItems } from './helpers/searchItems.js' // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥–∞–Ω–Ω—ã–º
import { dateFromTimeStamp } from './helpers/dateFromTimeStamp.js' // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
import { User, initDB } from './data/db.js' // –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Telegraf(process.env.API_KEY)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è (–≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–µ—à–∞ - 1 —á–∞—Å)
const CACHE_TTL = 60 * 60 * 1000 // 60 –º–∏–Ω—É—Ç * 60 —Å–µ–∫—É–Ω–¥ * 1000 –º—Å = 1 —á–∞—Å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
const searchResults = new Map() // –ö–µ—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ (–∫–ª—é—á: ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∑–Ω–∞—á–µ–Ω–∏–µ: –¥–∞–Ω–Ω—ã–µ)
const sentMessages = new Map() // –¢—Ä–µ–∫–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–ª—é—á: ID —á–∞—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ: –º–∞—Å—Å–∏–≤ ID —Å–æ–æ–±—â–µ–Ω–∏–π)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
await initDB() // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º await

// --- –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
const mainMenu = Markup.keyboard([
  ['üîç –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É', '‚ÑπÔ∏è –û –±–æ—Ç–µ'], // –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
  ['‚ùì –ü–æ–º–æ—â—å' /* '‚òï –ö—É–ø–∏—Ç—å –Ω–∞–º –∫–æ—Ñ–µ' */], // –í—Ç–æ—Ä–æ–π —Ä—è–¥ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
]).resize() // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ---
bot.start(async (ctx) => {
  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const { id, first_name, username } = ctx.from // ctx.from - –æ–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ

    // –ò—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const [user, created] = await User.findOrCreate({
      where: { userId: id }, // –£—Å–ª–æ–≤–∏–µ –ø–æ–∏—Å–∫–∞
      defaults: { // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        firstName: first_name,
        username: username || null, // username –º–æ–∂–µ—Ç –±—ã—Ç—å undefined
      },
    })

    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (created) {
      console.log(`‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${first_name} (ID: ${id})`)
    } else {
      console.log(`üëã –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${first_name}`)
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      await user.update({ lastActivity: new Date() })
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    ctx.reply(
      '–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏—è —Å–Ω–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.',
      mainMenu
    )
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start:', err)
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
  }
})

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ ---
const commandHandlers = {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É"
  'üîç –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É': (ctx) => ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞:'),
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –±–æ—Ç–µ"
  '‚ÑπÔ∏è –û –±–æ—Ç–µ': (ctx) =>
    ctx.reply(
      'üîÆ –°–æ–Ω–Ω–∏–∫ —Å –≥–ª—É–±–æ–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –ø—Ä–∏—Å–Ω–∏–ª–æ—Å—å ‚Äî –∏ —è —Ä–∞—Å—à–∏—Ñ—Ä—É—é —Å–∫—Ä—ã—Ç—ã–µ —Å–º—ã—Å–ª—ã!'
    ),
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
  '‚ùì –ü–æ–º–æ—â—å': (ctx) =>
    ctx.reply(
      '–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏—è —Å–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª–∏–Ω–æ–π >3 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–µ" –≤–º–µ—Å—Ç–æ "—ë".'
    ),
}

// --- Middleware –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
bot.use(async (ctx, next) => {
  await next() // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ –ø–æ —Ü–µ–ø–æ—á–∫–µ middleware
  
  // –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
  if (ctx.message && ctx.from.id === ctx.botInfo.id) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —á–∞—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    // –î–æ–±–∞–≤–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç—Ä–µ–∫–µ—Ä
    sentMessages.get(ctx.chat.id).push(ctx.message.message_id)
  }
})

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
Object.entries(commandHandlers).forEach(([command, handler]) => {
  bot.hears(command, handler) // –ö–æ–≥–¥–∞ –±–æ—Ç "—Å–ª—ã—à–∏—Ç" –∫–æ–º–∞–Ω–¥—É - –≤—ã–∑—ã–≤–∞–µ—Ç handler
})

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∏—Å–∫) ---
bot.on('text', async (ctx) => {
  const { text: target, from, message_id } = ctx.message // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ commandHandlers
  if (commandHandlers[target]) return

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
  if (target.length < 3) {
    ctx.reply('üîç –°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.', mainMenu)
    return
  }

  try {
    // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ–Ω–Ω–∏–∫–∞
    const dreams = searchItems(data, target)

    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if (!dreams.length) {
      ctx.reply('üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.', mainMenu)
      return
    }

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    const buttons = dreams.map((dream, index) =>
      Markup.button.callback(
        dream.word, // –¢–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        `dream_${message_id}_${index}` // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π callback_data
      )
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–µ—à
    searchResults.set(message_id, {
      dreams, // –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      timestamp: Date.now(), // –í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      userId: ctx.from.id, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    const searchResultMessage = await ctx.reply(
      `üîç –ù–∞–π–¥–µ–Ω–æ: ${dreams.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤`,
      Markup.inlineKeyboard( // –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        [...buttons, Markup.button.callback('üîô –ù–∞–∑–∞–¥', 'back_to_menu')],
        { columns: 2 } // 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
      )
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç—Ä–µ–∫–µ—Ä
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    sentMessages.get(ctx.chat.id).push(searchResultMessage.message_id)

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log(
      `first_name: ${from.first_name}, username: ${
        from.username
      }, word: ${target}, amount: ${dreams.length}, date: ${dateFromTimeStamp(
        ctx.message.date
      )}`
    )
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error)
  }
})

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–æ–º —Å–Ω–∞ ---
bot.action(/^dream_(\d+)_(\d+)$/, async (ctx) => {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏–Ω–¥–µ–∫—Å –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏–∑ callback_data
  const [_, messageId, index] = ctx.match
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞
  const cached = searchResults.get(Number(messageId))

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∫–µ—à–∞
  if (!cached || Date.now() - cached.timestamp > CACHE_TTL) {
    await ctx.answerCbQuery('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç–∞—Ä–µ–ª–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∏—Å–∫.')
    return
  }

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–Ω–∞
  const dream = cached.dreams[Number(index)]
  if (!dream) return

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è)
  const interpretationText = `${dream.description}`
  
  // –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram - 4096 —Å–∏–º–≤–æ–ª–æ–≤)
  const parts = splitText(interpretationText, 4096)

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏
  for (const part of parts) {
    const sentMessage = await ctx.reply(part)
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!sentMessages.has(ctx.chat.id)) {
      sentMessages.set(ctx.chat.id, [])
    }
    sentMessages.get(ctx.chat.id).push(sentMessage.message_id)
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
  const shareText = `${dream.description.substring(0, 100)}...\n\nüîÆ –ë–æ–ª—å—à–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: https://t.me/${ctx.botInfo.username}`

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
  const shareMessage = await ctx.reply(
    `üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º —Å–Ω–∞ "${dream.word}":`,
    Markup.inlineKeyboard([
      [
        Markup.button.url(
          'üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–Ω–æ–º —Å –¥—Ä—É–∑—å—è–º–∏',
          `https://t.me/share/url?url=${encodeURIComponent(
            `–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Å–Ω–∞ "${dream.word}"`
          )}&text=${encodeURIComponent(shareText)}`
        ),
      ],
      [Markup.button.callback('üîô –í –º–µ–Ω—é', 'back_to_menu')],
    ])
  )

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
  if (!sentMessages.has(ctx.chat.id)) {
    sentMessages.set(ctx.chat.id, [])
  }
  sentMessages.get(ctx.chat.id).push(shareMessage.message_id)

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback (—É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏ —É –∫–Ω–æ–ø–∫–∏)
  ctx.answerCbQuery()
})

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é ---
bot.action('back_to_menu', async (ctx) => {
  await ctx.deleteMessage() // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  ctx.reply('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.', mainMenu) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
})

// --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
bot
  .launch()
  .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
  .catch((err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err))

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.once('SIGINT', () => bot.stop('SIGINT')) // Ctrl+C
process.once('SIGTERM', () => bot.stop('SIGTERM')) // –°–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è