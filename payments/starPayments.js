// payment/starPayments.js
import { Markup } from 'telegraf'
import { db } from '../data/db.js'
import { safeReply } from '../handlers/limiter.js'

// –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–æ–∫
const PRODUCTS = {
  premium_1d: {
    title: '–ü—Ä–µ–º–∏—É–º –Ω–∞ 1 –¥–µ–Ω—å',
    payload: 'premium_1d',
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–∞–¥–∞–Ω–∏—è–º –Ω–∞ 24 —á–∞—Å–∞',
    price: 70,
    days: 1,
  },
  premium_7d: {
    title: '–ü—Ä–µ–º–∏—É–º –Ω–∞ 7 –¥–Ω–µ–π',
    payload: 'premium_7d',
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–∞–¥–∞–Ω–∏—è–º –Ω–∞ 7 –¥–Ω–µ–π',
    price: 250,
    days: 7,
  },
  premium_30d: {
    title: '–ü—Ä–µ–º–∏—É–º –Ω–∞ 30 –¥–Ω–µ–π',
    payload: 'premium_30d',
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–∞–¥–∞–Ω–∏—è–º –Ω–∞ 30 –¥–Ω–µ–π',
    price: 600,
    days: 30,
  },
  limits_3: {
    title: '3 –ª–∏–º–∏—Ç–∞',
    payload: 'limits_3',
    description: '–î–æ—Å—Ç—É–ø –∫ 3 –≥–∞–¥–∞–Ω–∏—è–º',
    price: 30,
    amount: 3,
  },
  limits_10: {
    title: '10 –ª–∏–º–∏—Ç–æ–≤',
    payload: 'limits_10',
    description: '–î–æ—Å—Ç—É–ø –∫ 10 –≥–∞–¥–∞–Ω–∏—è–º',
    price: 60,
    amount: 10,
  },
  limits_30: {
    title: '30 –ª–∏–º–∏—Ç–æ–≤',
    payload: 'limits_30',
    description: '–î–æ—Å—Ç—É–ø –∫ 30 –≥–∞–¥–∞–Ω–∏—è–º',
    price: 150,
    amount: 30,
  },
}

async function showPremiumOptions(ctx) {
  await safeReply(ctx, () => {
    ctx.reply(
      'üíé –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–º–∏—É–º-–¥–æ—Å—Ç—É–ø:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üíé 1 –¥–µ–Ω—å ‚Äî 70 ‚≠ê', 'buy_premium_1d')],
        [Markup.button.callback('üíé 7 –¥–Ω–µ–π ‚Äî 250 ‚≠ê', 'buy_premium_7d')],
        [Markup.button.callback('üíé 30 –¥–Ω–µ–π ‚Äî 600 ‚≠ê', 'buy_premium_30d')],
        [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥', 'menu_account')],
      ])
    )
  })
}

async function showLimitOptions(ctx) {
  await safeReply(ctx, () => {
    ctx.reply(
      '‚ûï –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –ª–∏–º–∏—Ç–æ–≤:',
      Markup.inlineKeyboard([
        [Markup.button.callback('3 –ª–∏–º–∏—Ç–∞ ‚Äî 30 ‚≠ê', 'buy_limits_3')],
        [Markup.button.callback('10 –ª–∏–º–∏—Ç–æ–≤ ‚Äî 60 ‚≠ê', 'buy_limits_10')],
        [Markup.button.callback('30 –ª–∏–º–∏—Ç–æ–≤ ‚Äî 150 ‚≠ê', 'buy_limits_30')],
        [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥', 'menu_account')],
      ])
    )
  })
}

async function sendStarInvoice(ctx, key) {
  const product = PRODUCTS[key]
  if (!product) return

  await ctx.sendInvoice({
    title: product.title,
    description: product.description,
    payload: product.payload,
    provider_token: '', // Telegram Stars ‚Äî –ø—É—Å—Ç–æ–π —Ç–æ–∫–µ–Ω
    currency: 'XTR',
    prices: [{ label: product.title, amount: product.price }],
    start_parameter: 'stars_buy',
  })
}

async function handleSuccessfulPayment(ctx) {
  const { invoice_payload } = ctx.message.successful_payment
  const product = PRODUCTS[invoice_payload]
  if (!product) return

  const userId = ctx.from.id
  if (invoice_payload.startsWith('premium')) {
    const now = new Date()
    const until = new Date(now.getTime() + product.days * 24 * 60 * 60 * 1000)
    db.prepare('UPDATE Users SET premiumSince = ? WHERE userId = ?').run(
      until.toISOString(),
      userId
    )
    await safeReply(ctx, () =>
      ctx.reply(
        `‚úÖ –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ ${product.days} –¥–Ω.`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üë§ –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', 'menu_account')],
        ])
      )
    )
  }

  if (invoice_payload.startsWith('limits')) {
    const user = db.prepare('SELECT * FROM Users WHERE userId = ?').get(userId)
    const updated = (user.limit || 0) + product.amount
    db.prepare('UPDATE Users SET "limit" = ? WHERE userId = ?').run(
      updated,
      userId
    )
    await safeReply(ctx, () =>
      ctx.reply(
        `‚úÖ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ ${product.amount} –ª–∏–º–∏—Ç–æ–≤.`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üë§ –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', 'menu_account')],
        ])
      )
    )
  }
}

export {
  showPremiumOptions,
  showLimitOptions,
  sendStarInvoice,
  handleSuccessfulPayment,
}
